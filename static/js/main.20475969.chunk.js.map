{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","dlugosc","szerokosc","wysokosc","tektura","bigi","X","Y","bigiFabryczne","handelChange","e","_this","setState","Object","defineProperty","target","id","value","handleSelect","handleClick","react_default","a","createElement","Math","ceil","className","class","this","onChange","type","placeholder","aria-label","aria-describedby","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20475969.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    dlugosc: \"\",\r\n    szerokosc: '',\r\n    wysokosc: '',\r\n    tektura: 'C',\r\n    bigi: '',\r\n    X: '',\r\n    Y: '',\r\n    bigiFabryczne: \"\"\r\n  }\r\n\r\n\r\n  handelChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    }\r\n    )\r\n  }\r\n  handleSelect = e => {\r\n    this.setState({\r\n      tektura: e.target.value,\r\n    }\r\n    )\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.tektura === \"BC\") {\r\n      this.setState({\r\n        bigi: <p>10// {this.state.szerokosc * 1 + 1} v {this.state.dlugosc * 1 + 1} v {this.state.szerokosc * 1 + 1} v {this.state.dlugosc * 1 - 1} v 30</p>,\r\n        X: (this.state.dlugosc * 1 + this.state.szerokosc * 1) * 2 + 72,\r\n        bigiFabryczne: <p>{Math.ceil(this.state.szerokosc / 2 + 4)} v {this.state.wysokosc * 1 + 10} v {Math.ceil(this.state.szerokosc / 2 + 4)} </p>,\r\n        Y: Math.ceil(this.state.szerokosc / 2 + 4) + this.state.wysokosc * 1 + 10 + Math.ceil(this.state.szerokosc / 2 + 4)\r\n      })\r\n\r\n    } else if (this.state.tektura === \"C\") {\r\n      this.setState({\r\n        bigi: <p>10// {this.state.szerokosc} v {this.state.dlugosc - 1} v {this.state.szerokosc - 1} v {this.state.dlugosc - 1} v 30</p>,\r\n        X: this.state.szerokosc * 1 + this.state.dlugosc * 1 - 1 + this.state.szerokosc * 1 - 1 + this.state.dlugosc * 1 - 1 + 68,\r\n        bigiFabryczne: <p>{Math.ceil(this.state.szerokosc / 2 + 3)} v {this.state.wysokosc * 1 + 6} v {Math.ceil(this.state.szerokosc / 2 + 3)} </p>,\r\n        Y: Math.ceil(this.state.szerokosc / 2 + 3) + this.state.wysokosc * 1 + 6 + Math.ceil(this.state.szerokosc / 2 + 3)\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Wraper container\">\r\n        <div className='row'>\r\n        <select class=\"custom-select col\" value={this.state.tektura} onChange={this.handleSelect}>\r\n          <option value=\"C\">C</option>\r\n          <option value=\"BC\">BC</option>\r\n        </select>\r\n        <input type='number' class=\"form-control col\" placeholder=\"Długość\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" id='dlugosc' value={this.state.dlugosc} onChange={this.handelChange}></input>\r\n        <input type='number' class=\"form-control col\" placeholder=\"Szerokość\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"  id='szerokosc' onChange={this.handelChange}></input>\r\n        <input type='number' class=\"form-control col\" placeholder=\"Wysokość\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"  id='wysokosc' onChange={this.handelChange}></input>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleClick}>Policz</button>\r\n        </div>\r\n        <div className=\"content\">\r\n        {this.state.bigi ? <h4>Bigi:</h4> : null}\r\n        {this.state.bigi}\r\n        {this.state.bigiFabryczne ? <h4>Bigi fabryczne:</h4> : null}\r\n        {this.state.bigiFabryczne}\r\n        {this.state.X && this.state.Y ? <h4>Formatka:</h4> : null}\r\n        {this.state.X} {this.state.X && this.state.Y ? 'X' : null} {this.state.Y}\r\n        </div>\r\n        \r\n        </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}